#@ load("@ytt:data", "data")
#@yaml/text-templated-strings
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    kapp.k14s.io/versioned : ""
  name: #@ data.values.service.name + "-config"
data:
  config.json: |-
    {  
      "petServiceUrl": "http://(@=  data.values.service.virtual_host @)/pets",
      "stage": "(@=  data.values.service.stage @)",
      "debug": "False",
      "stage_color": "(@=  data.values.service.color @)"
    }
---
kind: Deployment
apiVersion: apps/v1
metadata:  
  name: #@ data.values.service.name +"-app"
  labels:
    app: #@ data.values.service.name+ "-app"
    group: #@ data.values.service.application
    k8s-app: #@ data.values.service.application  
spec:
  replicas: #@ data.values.service.replicas
  selector:
    matchLabels:
      app: #@ data.values.service.name+ "-app"
      group: #@ data.values.service.application
      k8s-app: #@ data.values.service.application
  template:
    metadata:
      labels:
        app: #@ data.values.service.name+ "-app"       
        group: #@ data.values.service.application
        k8s-app: #@ data.values.service.application
    spec:
      volumes:
        - name: config-volume
          configMap:
            name:  #@ data.values.service.name + "-config"
            items:            
            - key: config.json
              path: config.json                        
      containers:
        - name: #@ data.values.service.name
          image: #@ data.values.service.image
          imagePullPolicy: Always
          ports:
            - name: #@ data.values.service.name+ "-http"
              containerPort: #@ data.values.service.port
          volumeMounts:
            - name: config-volume
              mountPath: #@ data.values.service.config_path          
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: #@ data.values.service.name +"-service"
  labels:
    app: #@ data.values.service.name+ "-app"
    group: #@ data.values.service.application
    k8s-app: #@ data.values.service.application
spec:
  ports:
    - protocol: TCP
      name: #@ data.values.service.name+ "-http"
      port: #@ data.values.service.port
  selector:
    app: #@ data.values.service.name+ "-app"
    group: #@ data.values.service.application
    k8s-app: #@ data.values.service.application
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: #@ data.values.service.name + "-ingress"
spec:
  rules:
    - host: #@ data.values.service.virtual_host
      http:
        paths:
          - path: #@ "/"+ data.values.service.name
            backend:
              serviceName:  #@ data.values.service.name +"-service"
              servicePort: #@ data.values.service.port






