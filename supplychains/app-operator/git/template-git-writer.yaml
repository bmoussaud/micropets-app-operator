#@ load("@ytt:data", "data")

apiVersion: carto.run/v1alpha1
kind: ClusterTemplate
metadata:
  name: git-writer
spec:
  params:
    - name: git_writer_username
      default: #@ data.values.git_writer.username
    - name: git_writer_user_email
      default: #@ data.values.git_writer.user_email
    - name: git_writer_commit_message
      default: #@ data.values.git_writer.message
    - name: git_writer_ssh_user
      default: #@ data.values.git_writer.ssh_user
    - name: git_writer_server
      default: #@ data.values.git_writer.server
    - name: git_writer_port
      default: #@ data.values.git_writer.port
    - name: git_writer_repository
      default: #@ data.values.git_writer.repository
    - name: git_writer_branch
      default: #@ data.values.git_writer.branch
    - name: git_writer_skip_host_checking
      default: false
    - name: git_writer_ssh_variant
      default: ssh
  template:
    apiVersion: carto.run/v1alpha1
    kind: Runnable
    metadata:
      name: $(workload.metadata.name)$-git-writer
    spec:
      serviceAccountName: $(workload.spec.serviceAccountName)$
      runTemplateRef:
        name: git-writer
      retentionPolicy:
        maxFailedRuns: 2
        maxSuccessfulRuns: 1
      inputs:
        input_config_map_name: $(workload.metadata.name)$
        input_config_map_path: applications/micropets/$(workload.metadata.name)$
        input_config_map_field: $(workload.metadata.name)$.yaml

        git_username: $(params.git_writer_username)$
        git_user_email: $(params.git_writer_user_email)$
        commit_message: $(params.git_writer_commit_message)$                
        git_revision: $(sources.source.revision)$
        git_url: $(workload.spec.source.git.url)$
        
        git_ssh_user: $(params.git_writer_ssh_user)$
        git_server: $(params.git_writer_server)$
        git_server_port: $(params.git_writer_port)$
        git_repository: $(params.git_writer_repository)$
        branch: $(params.git_writer_branch)$
        skip_host_checking: $(params.git_writer_skip_host_checking)$
        git_ssh_variant: $(params.git_writer_ssh_variant)$
        values: $(config.values)$
        schema: $(config.schema)$
        
        
