---
#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:json", "json")
---
apiVersion: carto.run/v1alpha1
kind: ClusterSupplyChain
metadata:
  name: micropet-service-supply-chain-git
spec:
  selector:
    app.tanzu.vmware.com/workload-type: micropet-service-git
  #
  #
  #   source-provider <--[src]-- image-builder <--[img]--- config-provider  <--[configmap]---  git-writer
  #     GitRepository               Image                    ConfigMap                         Git Commit
  #
  params:
    - name: usedb
      default: false
    - name: component
      default: backend
    - name: mode
      default: "RANDOM_NUMBER"
  resources:
    - name: source-provider
      templateRef:
        kind: ClusterSourceTemplate
        name: micropet-source
    - name: image-builder
      params:
        - name: serviceAccount
          value: tap-default
        - name: registry
          value:
            ca_cert_data: ""
            image_prefix: #@ data.values.image_prefix
            host: #@ data.values.registry.host
      templateRef:
        kind: ClusterImageTemplate
        name: micropet-image
      sources:
        - resource: source-provider
          name: source
    - name: config-provider
      templateRef:
        kind: ClusterConfigTemplate
        name: micropet-service-intermediate-config
      images:
        - resource: image-builder
          name: image
    - name: git-writer
      params:
        - name: serviceAccount
          value: tap-default
      templateRef:
        kind: ClusterTemplate
        name: git-writer
      configs:
        - resource: config-provider
          name: config
      sources:
        - resource: source-provider
          name: source
    - name: deliverable
      params:
        - name: environment
          value: azure/aks-eu-tap-2
      templateRef:
        kind: ClusterTemplate
        name: micropets-deliverable-template
