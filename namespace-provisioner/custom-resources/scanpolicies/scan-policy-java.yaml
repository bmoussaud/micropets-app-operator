apiVersion: scanning.apps.tanzu.vmware.com/v1beta1
kind: ScanPolicy
metadata:
  name: scan-policy-java
  labels:
    "app.kubernetes.io/part-of": "scan-system"
spec:
  regoFile: |
    package main

    notAllowedSeverities := ["Critical", "UnknownSeverity"]    
    ignoreCves := ["GHSA-36p3-wjmg-h94x","CVE-2019-10211","CVE-2018-1115","CVE-2015-3166","CVE-2015-0244","CVE-2016-1000027","CVE-2021-26291"]
    ignoreComponents := ["h2"]

    contains(array, elem) = true {
      array[_] = elem
    } else = false { true }

    isSafe(match) {
        severities := { e | e := match.ratings.rating.severity } | { e | e := match.ratings.rating[_].severity }
        some i
        fails := contains(notAllowedSeverities, severities[i])
        not fails
    }

    isSafe(match) {
        ignore := contains(ignoreCves, match.id)
        ignore
    }

    ignoreComponent(component) {
      ignore := contains(ignoreComponents, component.name)
        ignore
    }

    deny[msg] {
        comps := { e | e := input.bom.components.component } | { e | e := input.bom.components.component[_] }
        some i
        comp := comps[i]
        not ignoreComponent(comp)
        vulns := { e | e := comp.vulnerabilities.vulnerability } | { e | e := comp.vulnerabilities.vulnerability[_] }
        some j
        vuln := vulns[j]
        ratings := { e | e := vuln.ratings.rating.severity } | { e | e := vuln.ratings.rating[_].severity }
        not isSafe(vuln)
        msg = sprintf("CVE %s %s %s", [comp.name, vuln.id, ratings])
    }
